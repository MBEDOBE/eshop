{"ast":null,"code":"var _jsxFileName = \"I:\\\\Port_Projects\\\\eshop\\\\frontend\\\\src\\\\screens\\\\MapScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { LoadScript, GoogleMap, StandaloneSearchBox, Marker } from '@react-google-maps/api';\nimport LoadingBox from '../components/LoadingBox';\nimport Axios from 'axios';\nimport { USER_ADDRESS_MAP_CONFIRM } from '../constants/userConstants';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libs = ['places'];\nconst defaultLocation = {\n  lat: 45.516,\n  lng: -73.56\n};\nexport default function MapScreen(props) {\n  _s();\n\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n  useEffect(() => {\n    const fetch = async () => {\n      const {\n        data\n      } = await Axios('/api/config/googlemap');\n      setGoogleApiKey(data);\n      getUserCurrentLocation();\n    };\n\n    fetch();\n  }, []);\n\n  const onLoad = map => {\n    mapRef.current = map;\n  };\n\n  const onMarkerLoad = marker => {\n    markerRef.current = marker;\n  };\n\n  const onLoadPlaces = place => {\n    placeRef.current = place;\n  };\n\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng()\n    });\n  };\n\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({\n      lat: place.lat(),\n      lng: place.lng()\n    });\n    setLocation({\n      lat: place.lat(),\n      lng: place.lng()\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces();\n\n    if (places && places.length === 1) {\n      // dispatch select action\n      dispatch({\n        type: USER_ADDRESS_MAP_CONFIRM,\n        payload: {\n          lat: location.lat,\n          lng: location.lng,\n          address: places[0].formatted_address,\n          name: places[0].name,\n          vicinity: places[0].vicinity,\n          googleAddressId: places[0].id\n        }\n      });\n      alert('location selected successfully.');\n      props.history.push('/shipping');\n    } else {\n      alert('Please enter your address');\n    }\n  };\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n    }\n  };\n\n  return googleApiKey ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-container\",\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      libraries: libs,\n      googleMapsApiKey: googleApiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"smaple-map\",\n        mapContainerStyle: {\n          height: '100%',\n          width: '100%'\n        },\n        center: center,\n        zoom: 15,\n        onLoad: onLoad,\n        onIdle: onIdle,\n        children: [/*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: onLoadPlaces,\n          onPlacesChanged: onPlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter your address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"primary\",\n              onClick: onConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: location,\n          onLoad: onMarkerLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapScreen, \"FvQoWY5xbeizQachYmSbuS4Mpc8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MapScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapScreen\");","map":{"version":3,"names":["React","useEffect","useRef","useState","LoadScript","GoogleMap","StandaloneSearchBox","Marker","LoadingBox","Axios","USER_ADDRESS_MAP_CONFIRM","useDispatch","libs","defaultLocation","lat","lng","MapScreen","props","googleApiKey","setGoogleApiKey","center","setCenter","location","setLocation","mapRef","placeRef","markerRef","fetch","data","getUserCurrentLocation","onLoad","map","current","onMarkerLoad","marker","onLoadPlaces","place","onIdle","onPlacesChanged","getPlaces","geometry","dispatch","onConfirm","places","length","type","payload","address","formatted_address","name","vicinity","googleAddressId","id","alert","history","push","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","height","width"],"sources":["I:/Port_Projects/eshop/frontend/src/screens/MapScreen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  LoadScript,\r\n  GoogleMap,\r\n  StandaloneSearchBox,\r\n  Marker,\r\n} from '@react-google-maps/api';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport Axios from 'axios';\r\nimport { USER_ADDRESS_MAP_CONFIRM } from '../constants/userConstants';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst libs = ['places'];\r\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\r\n\r\nexport default function MapScreen(props) {\r\n  const [googleApiKey, setGoogleApiKey] = useState('');\r\n  const [center, setCenter] = useState(defaultLocation);\r\n  const [location, setLocation] = useState(center);\r\n\r\n  const mapRef = useRef(null);\r\n  const placeRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const { data } = await Axios('/api/config/googlemap');\r\n      setGoogleApiKey(data);\r\n      getUserCurrentLocation();\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  const onLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n\r\n  const onMarkerLoad = (marker) => {\r\n    markerRef.current = marker;\r\n  };\r\n  const onLoadPlaces = (place) => {\r\n    placeRef.current = place;\r\n  };\r\n  const onIdle = () => {\r\n    setLocation({\r\n      lat: mapRef.current.center.lat(),\r\n      lng: mapRef.current.center.lng(),\r\n    });\r\n  };\r\n  const onPlacesChanged = () => {\r\n    const place = placeRef.current.getPlaces()[0].geometry.location;\r\n    setCenter({ lat: place.lat(), lng: place.lng() });\r\n    setLocation({ lat: place.lat(), lng: place.lng() });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const onConfirm = () => {\r\n    const places = placeRef.current.getPlaces();\r\n    if (places && places.length === 1) {\r\n      // dispatch select action\r\n      dispatch({\r\n        type: USER_ADDRESS_MAP_CONFIRM,\r\n        payload: {\r\n          lat: location.lat,\r\n          lng: location.lng,\r\n          address: places[0].formatted_address,\r\n          name: places[0].name,\r\n          vicinity: places[0].vicinity,\r\n          googleAddressId: places[0].id,\r\n        },\r\n      });\r\n      alert('location selected successfully.');\r\n      props.history.push('/shipping');\r\n    } else {\r\n      alert('Please enter your address');\r\n    }\r\n  };\r\n\r\n  const getUserCurrentLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation os not supported by this browser');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setCenter({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n        setLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return googleApiKey ? (\r\n    <div className=\"full-container\">\r\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\r\n        <GoogleMap\r\n          id=\"smaple-map\"\r\n          mapContainerStyle={{ height: '100%', width: '100%' }}\r\n          center={center}\r\n          zoom={15}\r\n          onLoad={onLoad}\r\n          onIdle={onIdle}\r\n        >\r\n          <StandaloneSearchBox\r\n            onLoad={onLoadPlaces}\r\n            onPlacesChanged={onPlacesChanged}\r\n          >\r\n            <div className=\"map-input-box\">\r\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\r\n              <button type=\"button\" className=\"primary\" onClick={onConfirm}>\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </StandaloneSearchBox>\r\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  ) : (\r\n    <LoadingBox></LoadingBox>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}