{"ast":null,"code":"import axios from 'axios';\nimport Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["I:/WEBSITES/eshop/frontend/src/actions/orderActions.js"],"names":["axios","Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_MINE_LIST_FAIL,\r\n  ORDER_MINE_LIST_REQUEST,\r\n  ORDER_MINE_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.post('/api/orders', order, {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n    dispatch({ type: CART_EMPTY });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (order, paymentResult) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = Axios.put(\r\n        `/api/orders/${order._id}/pay`,\r\n        paymentResult,\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_PAY_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get('/api/orders/mine', {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}