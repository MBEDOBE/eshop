{"ast":null,"code":"var _jsxFileName = \"I:\\\\Port_Projects\\\\eshop\\\\frontend\\\\src\\\\screens\\\\SupportScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\nexport default function SupportScreen() {\n  _s();\n\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      sk.on('message', data => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find(user => user._id === data._id);\n\n          if (existUser) {\n            allUsers = allUsers.map(user => user._id === existUser._id ? { ...user,\n              unread: true\n            } : user);\n            setUsers(allUsers);\n          }\n        }\n\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', updatedUser => {\n        const existUser = allUsers.find(user => user._id === updatedUser._id);\n\n        if (existUser) {\n          allUsers = allUsers.map(user => user._id === existUser._id ? updatedUser : user);\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', updatedUsers => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', user => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = user => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find(x => x._id === user._id);\n\n    if (existUser) {\n      allUsers = allUsers.map(x => x._id === existUser._id ? { ...x,\n        unread: false\n      } : x);\n      setUsers(allUsers);\n    }\n\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [...allMessages, {\n        body: messageBody,\n        name: userInfo.name\n      }];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id\n        });\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row top full-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1 support-users\",\n      children: [users.filter(x => x._id !== userInfo._id).length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"No Online User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: user._id === selectedUser._id ? '  selected' : '  ',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"block\",\n            type: \"button\",\n            onClick: () => selectUser(user),\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: user.unread ? 'unread' : user.online ? 'online' : 'offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3 support-messages\",\n      children: !selectedUser._id ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Chat with \", selectedUser.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          ref: uiMessagesRef,\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 41\n          }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: `${msg.name}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), \" \", msg.body]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: messageBody,\n              onChange: e => setMessageBody(e.target.value),\n              type: \"text\",\n              placeholder: \"type message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupportScreen, \"BHpZw9mClwtoU7ADQuL2UqU7b7I=\", false, function () {\n  return [useSelector];\n});\n\n_c = SupportScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupportScreen\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socketIOClient","useSelector","MessageBox","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","userSignin","state","userInfo","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","filter","length","online","msg","index","target","value"],"sources":["I:/Port_Projects/eshop/frontend/src/screens/SupportScreen.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nlet allUsers = [];\r\nlet allMessages = [];\r\nlet allSelectedUser = {};\r\nconst ENDPOINT =\r\n  window.location.host.indexOf('localhost') >= 0\r\n    ? 'http://127.0.0.1:5000'\r\n    : window.location.host;\r\n\r\nexport default function SupportScreen() {\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [messageBody, setMessageBody] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n\r\n    if (!socket) {\r\n      const sk = socketIOClient(ENDPOINT);\r\n      setSocket(sk);\r\n      sk.emit('onLogin', {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      sk.on('message', (data) => {\r\n        if (allSelectedUser._id === data._id) {\r\n          allMessages = [...allMessages, data];\r\n        } else {\r\n          const existUser = allUsers.find((user) => user._id === data._id);\r\n          if (existUser) {\r\n            allUsers = allUsers.map((user) =>\r\n              user._id === existUser._id ? { ...user, unread: true } : user\r\n            );\r\n            setUsers(allUsers);\r\n          }\r\n        }\r\n        setMessages(allMessages);\r\n      });\r\n      sk.on('updateUser', (updatedUser) => {\r\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\r\n        if (existUser) {\r\n          allUsers = allUsers.map((user) =>\r\n            user._id === existUser._id ? updatedUser : user\r\n          );\r\n          setUsers(allUsers);\r\n        } else {\r\n          allUsers = [...allUsers, updatedUser];\r\n          setUsers(allUsers);\r\n        }\r\n      });\r\n      sk.on('listUsers', (updatedUsers) => {\r\n        allUsers = updatedUsers;\r\n        setUsers(allUsers);\r\n      });\r\n      sk.on('selectUser', (user) => {\r\n        allMessages = user.messages;\r\n        setMessages(allMessages);\r\n      });\r\n    }\r\n  }, [messages, socket, users]);\r\n\r\n  const selectUser = (user) => {\r\n    allSelectedUser = user;\r\n    setSelectedUser(allSelectedUser);\r\n    const existUser = allUsers.find((x) => x._id === user._id);\r\n    if (existUser) {\r\n      allUsers = allUsers.map((x) =>\r\n        x._id === existUser._id ? { ...x, unread: false } : x\r\n      );\r\n      setUsers(allUsers);\r\n    }\r\n    socket.emit('onUserSelected', user);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert('Error. Please type message.');\r\n    } else {\r\n      allMessages = [\r\n        ...allMessages,\r\n        { body: messageBody, name: userInfo.name },\r\n      ];\r\n      setMessages(allMessages);\r\n      setMessageBody('');\r\n      setTimeout(() => {\r\n        socket.emit('onMessage', {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: selectedUser._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row top full-container\">\r\n      <div className=\"col-1 support-users\">\r\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\r\n          <MessageBox>No Online User Found</MessageBox>\r\n        )}\r\n        <ul>\r\n          {users\r\n            .filter((x) => x._id !== userInfo._id)\r\n            .map((user) => (\r\n              <li\r\n                key={user._id}\r\n                className={user._id === selectedUser._id ? '  selected' : '  '}\r\n              >\r\n                <button\r\n                  className=\"block\"\r\n                  type=\"button\"\r\n                  onClick={() => selectUser(user)}\r\n                >\r\n                  {user.name}\r\n                </button>\r\n                <span\r\n                  className={\r\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\r\n                  }\r\n                />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-3 support-messages\">\r\n        {!selectedUser._id ? (\r\n          <MessageBox>Select a user to start chat</MessageBox>\r\n        ) : (\r\n          <div>\r\n            <div className=\"row\">\r\n              <strong>Chat with {selectedUser.name} </strong>\r\n            </div>\r\n            <ul ref={uiMessagesRef}>\r\n              {messages.length === 0 && <li>No message.</li>}\r\n              {messages.map((msg, index) => (\r\n                <li key={index}>\r\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <form onSubmit={submitHandler} className=\"row\">\r\n                <input\r\n                  value={messageBody}\r\n                  onChange={(e) => setMessageBody(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"type message\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}