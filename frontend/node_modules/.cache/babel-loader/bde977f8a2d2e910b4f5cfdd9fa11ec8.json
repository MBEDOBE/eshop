{"ast":null,"code":"var _jsxFileName = \"I:\\\\Port_Projects\\\\eshop\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserEditScreen(props) {\n  _s();\n\n  const userId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      props.history.push('/userlist');\n    }\n\n    if (!user) {\n      dispatch(detailsUser(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsSeller(user.isSeller);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, props.history, successUpdate, user, userId]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update user\n\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isSeller,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit User \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isSeller\",\n            children: \"Is Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isSeller\",\n            type: \"checkbox\",\n            checked: isSeller,\n            onChange: e => setIsSeller(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isAdmin\",\n            children: \"Is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isAdmin\",\n            type: \"checkbox\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"HPfGkhUEbkz9cw+wo2XAk+ljldM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUser","LoadingBox","MessageBox","USER_UPDATE_RESET","UserEditScreen","props","userId","match","params","id","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","type","history","push","submitHandler","e","preventDefault","_id","target","value","checked"],"sources":["I:/Port_Projects/eshop/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nexport default function UserEditScreen(props) {\r\n  const userId = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSeller, setIsSeller] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      props.history.push('/userlist');\r\n    }\r\n    if (!user) {\r\n      dispatch(detailsUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsSeller(user.isSeller);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, props.history, successUpdate, user, userId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update user\r\n    dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit User {name}</h1>\r\n          {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          {errorUpdate && (\r\n            <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n          )}\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isSeller\">Is Seller</label>\r\n              <input\r\n                id=\"isSeller\"\r\n                type=\"checkbox\"\r\n                checked={isSeller}\r\n                onChange={(e) => setIsSeller(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isAdmin\">Is Admin</label>\r\n              <input\r\n                id=\"isAdmin\"\r\n                type=\"checkbox\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"primary\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}