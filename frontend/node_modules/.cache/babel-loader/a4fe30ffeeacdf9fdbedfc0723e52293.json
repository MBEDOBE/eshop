{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayPalButton = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PayPalButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(PayPalButton, _React$Component);\n\n  function PayPalButton(props) {\n    var _this;\n\n    _classCallCheck(this, PayPalButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayPalButton).call(this, props));\n    _this.state = {\n      isSdkReady: false\n    };\n    return _this;\n  }\n\n  _createClass(PayPalButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof window !== \"undefined\" && window !== undefined && window.paypal === undefined) {\n        this.addPaypalSdk();\n      } else if (typeof window !== \"undefined\" && window !== undefined && window.paypal !== undefined && this.props.onButtonReady) {\n        this.props.onButtonReady();\n      }\n    }\n  }, {\n    key: \"createOrder\",\n    value: function createOrder(data, actions) {\n      var _this$props = this.props,\n          currency = _this$props.currency,\n          options = _this$props.options,\n          amount = _this$props.amount,\n          shippingPreference = _this$props.shippingPreference;\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            currency_code: currency ? currency : options && options.currency ? options.currency : \"USD\",\n            value: amount.toString()\n          }\n        }],\n        application_context: {\n          shipping_preference: shippingPreference\n        }\n      });\n    }\n  }, {\n    key: \"onApprove\",\n    value: function onApprove(data, actions) {\n      var _this2 = this;\n\n      return actions.order.capture().then(function (details) {\n        if (_this2.props.onSuccess) {\n          return _this2.props.onSuccess(details, data);\n        }\n      })[\"catch\"](function (err) {\n        if (_this2.props.catchError) {\n          return _this2.props.catchError(err);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          amount = _this$props2.amount,\n          onSuccess = _this$props2.onSuccess,\n          createOrder = _this$props2.createOrder,\n          createSubscription = _this$props2.createSubscription,\n          onApprove = _this$props2.onApprove,\n          style = _this$props2.style;\n      var isSdkReady = this.state.isSdkReady;\n\n      if (!isSdkReady && (typeof window === \"undefined\" || window.paypal === undefined)) {\n        return null;\n      }\n\n      var Button = window.paypal.Buttons.driver(\"react\", {\n        React: _react[\"default\"],\n        ReactDOM: _reactDom[\"default\"]\n      });\n      var createOrderFn = amount && !createOrder ? function (data, actions) {\n        return _this3.createOrder(data, actions);\n      } : function (data, actions) {\n        return createOrder(data, actions);\n      };\n      return _react[\"default\"].createElement(Button, _extends({}, this.props, {\n        createOrder: createSubscription ? undefined : createOrderFn,\n        createSubscription: createSubscription,\n        onApprove: onSuccess ? function (data, actions) {\n          return _this3.onApprove(data, actions);\n        } : function (data, actions) {\n          return onApprove(data, actions);\n        },\n        style: style\n      }));\n    }\n  }, {\n    key: \"addPaypalSdk\",\n    value: function addPaypalSdk() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          options = _this$props3.options,\n          onButtonReady = _this$props3.onButtonReady;\n      var queryParams = []; // replacing camelCase with dashes\n\n      Object.keys(options).forEach(function (k) {\n        var name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n        queryParams.push(\"\".concat(name, \"=\").concat(options[k]));\n      });\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = \"https://www.paypal.com/sdk/js?\".concat(queryParams.join(\"&\"));\n      script.async = true;\n\n      script.onload = function () {\n        _this4.setState({\n          isSdkReady: true\n        });\n\n        if (onButtonReady) {\n          onButtonReady();\n        }\n      };\n\n      script.onerror = function () {\n        throw new Error(\"Paypal SDK could not be loaded.\");\n      };\n\n      document.body.appendChild(script);\n    }\n  }]);\n\n  return PayPalButton;\n}(_react[\"default\"].Component);\n\nexports.PayPalButton = PayPalButton;\n\n_defineProperty(PayPalButton, \"propTypes\", {\n  amount: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  shippingPreference: _propTypes[\"default\"].string,\n  onSuccess: _propTypes[\"default\"].func,\n  catchError: _propTypes[\"default\"].func,\n  onError: _propTypes[\"default\"].func,\n  createOrder: _propTypes[\"default\"].func,\n  createSubscription: _propTypes[\"default\"].func,\n  onApprove: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object,\n  options: _propTypes[\"default\"].shape({\n    clientId: _propTypes[\"default\"].string,\n    merchantId: _propTypes[\"default\"].string,\n    currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n    intent: _propTypes[\"default\"].string,\n    commit: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    vault: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    component: _propTypes[\"default\"].string,\n    disableFunding: _propTypes[\"default\"].string,\n    disableCard: _propTypes[\"default\"].string,\n    integrationDate: _propTypes[\"default\"].string,\n    locale: _propTypes[\"default\"].string,\n    buyerCountry: _propTypes[\"default\"].string,\n    debug: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string])\n  }),\n  onButtonReady: _propTypes[\"default\"].func\n});\n\n_defineProperty(PayPalButton, \"defaultProps\", {\n  style: {},\n  options: {\n    clientId: \"sb\",\n    currency: \"USD\"\n  },\n  shippingPreference: \"GET_FROM_FILE\"\n});","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyCMA,Y;;;AAyDF,wBAAYC,KAAZ,EAAsC;AAAA;;AAAAC;;AAClCC,sFAAMF,KAAN;AAEAE,UAAKC,KAAL,GAAa;AACTC,gBAAU,EAAE;AADH,KAAb;AAHkC;AAMrC;;;;wCAEmB;AAChB,UACI,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,KAAKC,SADX,IAEAD,MAAM,CAACE,MAAPF,KAAkBC,SAHtB,EAIE;AACE,aAAKE,YAAL;AALJ,aAOK,IACD,OAAOH,MAAP,KAAkB,WAAlB,IACAA,MAAM,KAAKC,SADX,IAEAD,MAAM,CAACE,MAAPF,KAAkBC,SAFlB,IAGA,KAAKN,KAAL,CAAWS,aAJV,EAKH;AACE,aAAKT,KAAL,CAAWS,aAAX;AACH;AACJ;;;gCAEWC,MAAWC,SAAc;AAAA,wBAEyB,KAAKX,KAF9B;AAAA,UAEzBY,QAFyB,eAEzBA,QAFyB;AAAA,UAEfC,OAFe,eAEfA,OAFe;AAAA,UAENC,MAFM,eAENA,MAFM;AAAA,UAEEC,kBAFF,eAEEA,kBAFF;AAIjC,aAAOJ,OAAO,CAACK,KAARL,CAAcM,MAAdN,CAAqB;AAC1BO,sBAAc,EAAE,CACd;AACEJ,gBAAM,EAAE;AACNK,yBAAa,EAAEP,QAAQ,GACnBA,QADmB,GAEnBC,OAAO,IAAIA,OAAO,CAACD,QAAnBC,GACAA,OAAO,CAACD,QADRC,GAEA,KALE;AAMNO,iBAAK,EAAEN,MAAM,CAACO,QAAPP;AAND;AADV,SADc,CADU;AAa1BQ,2BAAmB,EAAE;AACnBC,6BAAmB,EAAER;AADF;AAbK,OAArBJ,CAAP;AAiBH;;;8BAESD,MAAWC,SAAc;AAAA;;AAC/B,aAAOA,OAAO,CAACK,KAARL,CACFa,OADEb,GAEFc,IAFEd,CAEG,UAACe,OAAD,EAAa;AACf,YAAIC,MAAI,CAAC3B,KAAL,CAAW4B,SAAf,EAA0B;AACtB,iBAAOD,MAAI,CAAC3B,KAAL,CAAW4B,SAAX,CAAqBF,OAArB,EAA8BhB,IAA9B,CAAP;AACH;AALF,kBAOI,UAACmB,GAAD,EAAS;AACZ,YAAIF,MAAI,CAAC3B,KAAL,CAAW8B,UAAf,EAA2B;AACvB,iBAAOH,MAAI,CAAC3B,KAAL,CAAW8B,UAAX,CAAsBD,GAAtB,CAAP;AACH;AAVF,QAAP;AAYH;;;6BAEQ;AAAA;;AAAA,yBAQD,KAAK7B,KARJ;AAAA,UAEDc,MAFC,gBAEDA,MAFC;AAAA,UAGDc,SAHC,gBAGDA,SAHC;AAAA,UAIDG,WAJC,gBAIDA,WAJC;AAAA,UAKDC,kBALC,gBAKDA,kBALC;AAAA,UAMDC,SANC,gBAMDA,SANC;AAAA,UAODC,KAPC,gBAODA,KAPC;AAAA,UASG9B,UATH,GASkB,KAAKD,KAAL,CAAfC,UATH;;AAWL,UACI,CAACA,UAAD,KACC,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACE,MAAPF,KAAkBC,SADpD,CADJ,EAGE;AACE,eAAO,IAAP;AACH;;AAED,UAAM6B,MAAM,GAAG9B,MAAM,CAACE,MAAPF,CAAc+B,OAAd/B,CAAsBgC,MAAtBhC,CAA6B,OAA7BA,EAAsC;AACjDiC,aAAK,EAALA,iBADiD;AAEjDC,gBAAQ,EAARA;AAFiD,OAAtClC,CAAf;AAKA,UAAMmC,aAAa,GACf1B,MAAM,IAAI,CAACiB,WAAXjB,GACM,UAACJ,IAAD,EAAYC,OAAZ;AAAA,eAA6B8B,MAAI,CAACV,WAAL,CAAiBrB,IAAjB,EAAuBC,OAAvB,CAA7B;AADN,UAEM,UAACD,IAAD,EAAYC,OAAZ;AAAA,eAA6BoB,WAAW,CAACrB,IAAD,EAAOC,OAAP,CAAxC;AAHV;AAKA,aACI+B,gCAACP,MAAD,eACQ,KAAKnC,KADb;AAEI+B,mBAAW,EAAEC,kBAAkB,GAAG1B,SAAH,GAAekC,aAFlD;AAGIR,0BAAkB,EAAEA,kBAHxB;AAIIC,iBAAS,EACLL,SAAS,GACH,UAAClB,IAAD,EAAYC,OAAZ;AAAA,iBAA6B8B,MAAI,CAACR,SAAL,CAAevB,IAAf,EAAqBC,OAArB,CAA7B;AADG,YAEH,UAACD,IAAD,EAAYC,OAAZ;AAAA,iBAA6BsB,SAAS,CAACvB,IAAD,EAAOC,OAAP,CAAtC;AAPd;AASIuB,aAAK,EAAEA;AATX,SADJ;AAaH;;;mCAEsB;AAAA;;AAAA,yBACgB,KAAKlC,KADrB;AAAA,UACXa,OADW,gBACXA,OADW;AAAA,UACFJ,aADE,gBACFA,aADE;AAEnB,UAAMkC,WAAqB,GAAG,EAA9B,CAFmB,CAInB;;AACAC,YAAM,CAACC,IAAPD,CAAY/B,OAAZ+B,EAAqBE,OAArBF,CAA6B,aAAK;AAC9B,YAAMG,IAAI,GAAGC,CAAC,CAACC,KAAFD,CAAQ,WAARA,EAAqBE,IAArBF,CAA0B,GAA1BA,EAA+BG,WAA/BH,EAAb;AACAL,mBAAW,CAACS,IAAZT,WAAoBI,IAApB,cAA4BlC,OAAO,CAACmC,CAAD,CAAnC;AAFJ;AAKA,UAAMK,MAAM,GAAGC,QAAQ,CAACC,aAATD,CAAuB,QAAvBA,CAAf;AACAD,YAAM,CAACG,IAAPH,GAAc,iBAAdA;AACAA,YAAM,CAACI,GAAPJ,2CAA8CV,WAAW,CAACO,IAAZP,CAAiB,GAAjBA,CAA9C;AACAU,YAAM,CAACK,KAAPL,GAAe,IAAfA;;AACAA,YAAM,CAACM,MAAPN,GAAgB,YAAM;AAClBO,cAAI,CAACC,QAAL,CAAc;AAAEzD,oBAAU,EAAE;AAAd,SAAd;;AAEA,YAAIK,aAAJ,EAAmB;AACfA,uBAAa;AAChB;AALL;;AAOA4C,YAAM,CAACS,OAAPT,GAAiB,YAAM;AACnB,cAAM,IAAIU,KAAJ,CAAU,iCAAV,CAAN;AADJ;;AAIAT,cAAQ,CAACU,IAATV,CAAcW,WAAdX,CAA0BD,MAA1BC;AACH;;;;EA9LsBhB,kBAAM4B;;;;gBAA3BnE,c,aACiB;AACfe,QAAM,EAAEqD,sBAAUC,SAAVD,CAAoB,CACxBA,sBAAUE,MADc,EAExBF,sBAAUG,MAFc,CAApBH,CADO;AAKfvD,UAAQ,EAAEuD,sBAAUC,SAAVD,CAAoB,CAC1BA,sBAAUE,MADgB,EAE1BF,sBAAUG,MAFgB,CAApBH,CALK;AASfpD,oBAAkB,EAAEoD,sBAAUG,MATf;AAUf1C,WAAS,EAAEuC,sBAAUI,IAVN;AAWfzC,YAAU,EAAEqC,sBAAUI,IAXP;AAYfC,SAAO,EAAEL,sBAAUI,IAZJ;AAafxC,aAAW,EAAEoC,sBAAUI,IAbR;AAcfvC,oBAAkB,EAAEmC,sBAAUI,IAdf;AAeftC,WAAS,EAAEkC,sBAAUI,IAfN;AAgBfrC,OAAK,EAAEiC,sBAAUM,MAhBF;AAiBf5D,SAAO,EAAEsD,sBAAUO,KAAVP,CAAgB;AACrBQ,YAAQ,EAAER,sBAAUG,MADC;AAErBM,cAAU,EAAET,sBAAUG,MAFD;AAGrB1D,YAAQ,EAAEuD,sBAAUC,SAAVD,CAAoB,CAC1BA,sBAAUE,MADgB,EAE1BF,sBAAUG,MAFgB,CAApBH,CAHW;AAOrBU,UAAM,EAAEV,sBAAUG,MAPG;AAQrBQ,UAAM,EAAEX,sBAAUC,SAAVD,CAAoB,CACxBA,sBAAUY,IADc,EAExBZ,sBAAUG,MAFc,CAApBH,CARa;AAYrBa,SAAK,EAAEb,sBAAUC,SAAVD,CAAoB,CACvBA,sBAAUY,IADa,EAEvBZ,sBAAUG,MAFa,CAApBH,CAZc;AAgBrBc,aAAS,EAAEd,sBAAUG,MAhBA;AAiBrBY,kBAAc,EAAEf,sBAAUG,MAjBL;AAkBrBa,eAAW,EAAEhB,sBAAUG,MAlBF;AAmBrBc,mBAAe,EAAEjB,sBAAUG,MAnBN;AAoBrBe,UAAM,EAAElB,sBAAUG,MApBG;AAqBrBgB,gBAAY,EAAEnB,sBAAUG,MArBH;AAsBrBiB,SAAK,EAAEpB,sBAAUC,SAAVD,CAAoB,CACvBA,sBAAUY,IADa,EAEvBZ,sBAAUG,MAFa,CAApBH;AAtBc,GAAhBA,CAjBM;AA4Cf1D,eAAa,EAAE0D,sBAAUI;AA5CV;;gBADjBxE,c,gBAgDoB;AAClBmC,OAAK,EAAE,EADW;AAElBrB,SAAO,EAAE;AACL8D,YAAQ,EAAE,IADL;AAEL/D,YAAQ,EAAE;AAFL,GAFS;AAMlBG,oBAAkB,EAAE;AANF","names":["PayPalButton","props","_classCallCheck","_this","state","isSdkReady","window","undefined","paypal","addPaypalSdk","onButtonReady","data","actions","currency","options","amount","shippingPreference","order","create","purchase_units","currency_code","value","toString","application_context","shipping_preference","capture","then","details","_this2","onSuccess","err","catchError","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","_this3","_react","queryParams","Object","keys","forEach","name","k","split","join","toLowerCase","push","script","document","createElement","type","src","async","onload","_this4","setState","onerror","Error","body","appendChild","Component","PropTypes","oneOfType","number","string","func","onError","object","shape","clientId","merchantId","intent","commit","bool","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug"],"sources":["../src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n"]},"metadata":{},"sourceType":"script"}